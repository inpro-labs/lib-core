name: lib-core-release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
          - premajor
          - prepatch
          - prerelease
          - from-git

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      #############################################
      # 🧱 SETUP & VALIDATION
      #############################################

      - name: Checkout branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Ensure workflow was triggered from main or develop
        run: |
          if [[ "${{ github.ref }}" != "refs/heads/main" && "${{ github.ref }}" != "refs/heads/develop" ]]; then
            echo "❌ This workflow must be run from either 'main' or 'develop' branch. Received: ${{ github.ref }}"
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          registry-url: https://npm.pkg.github.com/

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      #############################################
      # 🧪 BUILD & TEST
      #############################################

      - name: Install dependencies
        run: npm ci

      - name: Build with Grunt
        run: npx grunt

      - name: Run tests
        run: npm run test

      #############################################
      # 🚀 VERSION & RELEASE
      #############################################

      - name: Bump version
        id: bump
        run: |
          npm version ${{ github.event.inputs.version_type }}
          echo "NEW_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Create release branch and push
        run: |
          git checkout -b release/v${{ env.NEW_VERSION }}
          git push --force origin release/v${{ env.NEW_VERSION }}
          git push origin --tags

      - name: Publish package to GitHub Packages
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request into main
        id: create-pr
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          PR_URL=$(gh pr create \
            --base main \
            --head release/v${{ env.NEW_VERSION }} \
            --title "Release v${{ env.NEW_VERSION }}" \
            --body "Version bump and tag for v${{ env.NEW_VERSION }}.")

          echo "pr_url=$PR_URL" >> $GITHUB_OUTPUT

      #############################################
      # 🔔 NOTIFICATION
      #############################################

      - name: Notify Discord
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d "{\"content\": \"📦 New release published for \`${{ github.repository }}\` version \`${{ env.NEW_VERSION }}\`: PR for main: ${{ steps.create-pr.outputs.pr_url }}\"}" \
            ${{ secrets.DISCORD_WEBHOOK_URL }}
